package dz.minagri.stat.location.control;

import dz.minagri.stat.customer.entity.Exploitant;
import dz.minagri.stat.customer.service.ExploitantService;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.*;

import java.util.Collection;

@RestController
@RequestMapping("/exploitant")
@AllArgsConstructor
@Slf4j
public class ExploitantController {
    private final ExploitantService exploitantService;

    @PostMapping("/save")
    public Exploitant saveExploitant(@RequestBody Exploitant exploitant) {
        log.info("Inside saveExploitant method of ExploitantController");
        return exploitantService
                .save(exploitant);

    }

    /**
     * @PostMapping("/{id}/update") public Optional<Zone> updateZone(@PathVariable("id") Long zoneId){
     * log.info("Inside updateZone method of ZoneController");
     * Zone zone = zoneService.findZoneById(zoneId).get();
     * return zoneService.save(zone);
     * <p>
     * }
     */

    @GetMapping("/{id}")
    public Exploitant findExploitantById(@PathVariable("id") Long Id) {
        log.info("Inside findExploitantById method of ExploitantController");
        return exploitantService
                .findExploitantById(Id);
    }

    @GetMapping("list/{limit}")
    public Collection<Exploitant> getExploitant(@PathVariable("limit") int limit) {
        log.info("Inside List method of ExploitantController");
        return exploitantService
                .List(limit);
    }
}
