package dz.minagri.stat.location.control;

import dz.minagri.stat.location.entity.Exploitation;
import dz.minagri.stat.location.service.ExploitationService;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDate;
import java.util.Collection;

@RestController
@RequestMapping("/exploitation")
@AllArgsConstructor
@Slf4j
public class ExploitationController {
    private final ExploitationService exploitationService;

    @PostMapping("")
    public Exploitation saveExploitation(@RequestParam String expolitationName,
                                         String surface, String lieuDit,
                                         Long zoneID, LocalDate registrationDate,
                                         String description) {
        log.info("Inside saveExploitation method of ExploitationController");
        return exploitationService.save(expolitationName, surface, lieuDit, zoneID, registrationDate, description);
    }

    /**
     * @PostMapping("/{id}/update") public Optional<Zone> updateZone(@PathVariable("id") Long zoneId){
     * log.info("Inside updateZone method of ZoneController");
     * Zone zone = zoneService.findZoneById(zoneId).get();
     * return zoneService.save(zone);
     * <p>
     * }
     */

    @GetMapping("/{Id}")
    public Exploitation findExploitationById(@PathVariable("Id") Long Id) {
        log.info("Inside findExploitationById method of ExploitationController");
        return exploitationService.findExploitationById(Id);
    }

    @GetMapping("list/{limit}")
    public Collection<Exploitation> getExploitation(@PathVariable("limit") int limit) {
        log.info("Inside List method of ExploitationController");
        return exploitationService.List(limit);
    }

    @PutMapping(path = "/{id}")
    public Exploitation updateExploitation(@PathVariable("id") Long id,
                                           @RequestParam(required = false) String exploitationName,
                                           @RequestParam(required = false) String surface,
                                           @RequestParam(required = false) String lieuDit,
                                           @RequestParam(required = false) Long zoneID,
                                           @RequestParam(required = false) LocalDate registrationDate,
                                           @RequestParam(required = false) String description) {
        return exploitationService.updateExplotation(id, exploitationName,
                surface, lieuDit, registrationDate,
                zoneID, description);
    }
}
