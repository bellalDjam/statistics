package dz.minagri.stat.location.entity;

import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import dz.minagri.stat.location.enumeration.EtatExploitation;
import dz.minagri.stat.location.enumeration.TypeExploitation;
import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

@Entity
@Getter
@Setter
@Builder
@Data
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "exploitation")
public class Exploitation implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    @Version
    private int version;

    @Column(name = "expolitation_name", nullable = true)
    private String expolitationName;

    @Column(name = "surface", nullable = true)
    private String surface;

    @Column(name = "lieuDit", nullable = true)
    private String lieuDit;

    @ManyToOne(cascade = CascadeType.ALL)
    @JsonIdentityReference(alwaysAsId = true)
    @JoinColumn(name = "zone_id")
    private Zone zone;

    @OneToMany(
            cascade = CascadeType.ALL,
            orphanRemoval = true,
            fetch = FetchType.LAZY)
    @JsonIgnore
    private List<Exploit> exploits = new ArrayList<>();
    //TODO

    @Column(name = "registration_date", columnDefinition = "DATE")
    private LocalDate registrationDate;
    private String description;
    @OneToMany(mappedBy = "exploitation", cascade = CascadeType.ALL)
    @Fetch(FetchMode.SUBSELECT)
    private List<ExploitationGlobalAspect> exploitationGlobalAspects;
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "exploitation", cascade = CascadeType.ALL)
    @Fetch(FetchMode.SUBSELECT)
    private List<Rga> rgaL = new ArrayList<>();
    @Enumerated(EnumType.STRING)
    private EtatExploitation etatexploitation;
    @Enumerated(EnumType.STRING)
    private TypeExploitation typeExploitation;
    @Column(name = "dLat", nullable = true, unique = true)
    private Double dLat;
    @Column(name = "dLon", nullable = true, unique = true)
    private Double dLon;

    public void addExploit(Exploit exploit) {
        exploits.add(exploit);
        exploit.setExploitation(this);
    }
}
